import QtQuick 2.0
import QtQuick.Layouts 1.12
import QtQuick.Controls 2.12
import QtQuick.Dialogs 1.2
import Qt.labs.settings 1.1
Page {
    visible: true
    width: 708
    height: 785
    title:"Competitive Mode"
    property int duration: 1000
    id: root
    property var found: false;

    property var bought: ["Normal Ball"]
    property int numCoins: 45;
    Image{
        x:0.1
        anchors.fill: parent
        opacity: 0.4
        source: "file:///Users/arjun/Documents/CompetitiveBall/images/gameStoreBackground.jpg"
    }
    //Number of coins thingy
    Rectangle{
        Row{
            spacing: 20;
            x: 10
            y:10
            Image{
                width: 25
                height: 25
                source: "file:///Users/arjun/Documents/CompetitiveBall/images/coinFront.png"
            }
            Text{
                text: numCoins
                font.family: "Stencil"
                horizontalAlignment: Text.AlignHCenter
                font.pointSize:15
            }
        }
    }
    //Big Pic
    Rectangle{
        id: bigPic
       anchors.bottom: lockSign.top
       anchors.horizontalCenter: parent.horizontalCenter
       width: purchaseButton.width*2.5
       height: purchaseButton.width*1.5
       border.color: "darkgray"
       border.width: 3
       radius: 4
       color: "transparent"
       Image{
           id: bigPicImage
           source: "file:///Users/arjun/Documents/All_Qt_Projects/Qt Quick/Qt Fundamentals Udemy Course/10-6AnimationDemo/images/basket_ball.png"
           width: 75;
           height: 75
       }
       RotationAnimation{
           id: bigPicAnim
           target: bigPicImage
           property: "rotation"
           to: 500;
           onRunningChanged: {
               if(!running)
                  bigPicImage.rotation =0;
           }
       }
    }

    //lockSign sign
    Image{
        id: lockSign
        width: purchaseButton.width/2
        height: width
        anchors.bottom: purchaseButton.top
        anchors.horizontalCenter: parent.horizontalCenter
        source: "file:///Users/arjun/Documents/CompetitiveBall/images/lockSign.png"
    }

    //Purchase Button
    Button{
        z:2
        //        anchors.horizontalCenter: parent.horizontalCenter
        //        anchors.bottom: grid.top
        x: buttonFadeRect.x+4
        y:buttonFadeRect.y-3
        id: purchaseButton
        height: 70;
        width:150;
        //        Rectangle{
        //            anchors.fill:parent
        ////            color: "#fffb0f"
        Row{
            anchors.verticalCenter: parent.verticalCenter
            anchors.horizontalCenter: parent.horizontalCenter
            spacing: 20
            Text{
                id: purchaseButtonText
                //cost
                text: "25"
                font.pointSize: 18
                font.bold: true
                horizontalAlignment: Text.AlignHCenter
                font.family: "Goudy Stout"
            }
            Image{
                //coin pic
                width:30
                height:30;
                source: "file:///Users/arjun/Documents/CompetitiveBall/images/coinFront.png"
                anchors.verticalCenter: parent.verticalCenter
            }

        }
        //        }
    }
    Rectangle{
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: grid.top
        id: buttonFadeRect
        height: 60;
        width:150;
        color: "#93a8c4"
    }
    //List model for all the different things
    ListModel{
        id: contactModel

        ListElement{
            type: "regularBall";
            name: "Normal Ball"
            picSource: ""
            price: 0;
        } ListElement{
            type: "blueBall";
            name: "Blue"
            picSource: ""
            price: 10
        } ListElement{
            type: "greenBall";
            name: "Green"
            picSource: "";
            price: 10
        } ListElement{
            type: "sparkleBall";
            name: "Sparkle"
            picSource: ""
            price: 15
        }ListElement{
            type: "tennisBall";
            name: "Tennis Ball"
            picSource: ""
            price: 15
        }ListElement{
            type: "soccerBall";
            name: "Soccer Ball"
            picSource: ""
            price: 20
        }ListElement{
            type: "bowlingBall";
            name: "Bowling Ball"
            picSource: ""
            price: 20

        }ListElement{
            type: "volleyBall";
            name: "Volley Ball"
            picSource: ""
            price: 25
        }
        ListElement{
            type: "moon";
            name: "The Moon"
            picSource: ""
            price: 32
        }
        ListElement{
            type: "Earth";
            name: "The Earth"
            picSource: ""
            price: 32
        }
    }

    GridView {
        width: 460; height: 345
        cellWidth: 115; cellHeight: 115
        id:grid
        anchors.horizontalCenter: parent.horizontalCenter
        y:root.height-height-40
        currentIndex: 0;
        Component {
            id: contactsDelegate
            Rectangle{
                width: grid.cellWidth
                height: grid.cellHeight
                color: "transparent"

                Rectangle {
                    width: grid.cellWidth-20
                    height: grid.cellHeight-20
                    id: wrapper
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.verticalCenter: parent.verticalCenter
                    border.width: 3
                    border.color: "black"
                    radius: 5;
                    Column{
                        anchors.fill: parent
                        Image{
                            width: 65
                            height:65;
                            source: picSource
                            anchors.horizontalCenter: parent.horizontalCenter
                        }
                        Text{
                            width: grid.cellWidth-15
                            anchors.horizontalCenter: parent.horizontalCenter
                            id: nameText
                            text: name
                            font.family: "Palatino Linotype"
                            font.bold:  (grid.isCurrentItem===true)?"true":"false"
                            horizontalAlignment: Text.AlignHCenter
                            font.pointSize: 8
                            color:"#050027"
                        }
                    }
                    MouseArea{
                        anchors.fill: parent
                        onClicked:{
                            console.log("Clicked on :" + name)
                            //what happens when u click
                            grid.currentIndex=index;
                            for(var i =0; i < bought.length; i++){
                                if(bought[i]===name)
                                    found = true;
                            }
                            if(!found){
                                //not bought yet
                                purchaseButton.visible=true;
                                buttonFadeRect.visible=true;
                                lockSign.visible = true;

                                purchaseButtonText.text = price;

                                if(numCoins<=price)
                                    purchaseButton.enabled=true;
                                else
                                    purchaseButton.enabled = false;
                            }
                            else{
                                //bought before
                                purchaseButton.visible=false;
                                buttonFadeRect.visible=false;
                                lockSign.visible = false;
                            }
                            bigPicImage.source= picSource;
                            bigPic.text =name;
                            bigPicSpin.start();
                        }
                    }
                }
            }


        }
        model: contactModel
        delegate: contactsDelegate
        highlight: Rectangle { color: "steelblue"; radius: 5; opacity: 0.5
        Image{
            id: checkMark
            visible: !found;
            anchors.top: parent.top
            anchors.right: parent.left
            width: 25;
            height: 25;
            source: "file:///Users/arjun/Documents/CompetitiveBall/images/checkMark.png"
        }
        }
        focus: true
    }
}
