import QtQuick 2.0
import QtQuick.Layouts 1.12
import QtQuick.Controls 2.12
import QtQuick.Dialogs 1.2
import Qt.labs.settings 1.1
Page {
    visible: true
    width: 708
    height: 785
    title:"Competitive Mode"
    property int duration: 1000
    id: root


    property int numCoins: 45;
    Image{
        x:0.1
        anchors.fill: parent
        source: "file:///Users/arjun/Documents/CompetitiveBall/images/gameStoreBackground.jpg"
    }
    //Number of coins thingy
    Rectangle{
        Row{
            spacing: 20;
            x: 10
            y:10
            Image{
                width: 25
                height: 25
                source: "file:///Users/arjun/Documents/CompetitiveBall/images/coinFront.png"
            }
            Text{
                text: numCoins
                font.family: "Stencil"
                horizontalAlignment: Text.AlignHCenter
                font.pointSize:15
            }
        }
    }
    //Purchase Button
    Button{
        z:2
//        anchors.horizontalCenter: parent.horizontalCenter
//        anchors.bottom: grid.top
        x: buttonFadeRect.x+10
        y:buttonFadeRect.y-10
        id: purchaseButton
        height: 70;
        width:150;
//        Rectangle{
//            anchors.fill:parent
////            color: "#fffb0f"
            Row{
                anchors.verticalCenter: parent.verticalCenter
                anchors.horizontalCenter: parent.horizontalCenter
                spacing: 20
                Text{
                    //cost
                    text: "25"
                    font.pointSize: 18
                    font.bold: true
                    horizontalAlignment: Text.AlignHCenter
                    font.family: "Goudy Stout"
                }
                Image{
                    //coin pic
                    width:30
                    height:30;
                    source: "file:///Users/arjun/Documents/CompetitiveBall/images/coinFront.png"
                    anchors.verticalCenter: parent.verticalCenter
                }

            }
//        }
    }
    Rectangle{
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: grid.top
        id: buttonFadeRect
        height: 70;
        width:150;
   }
    //List model for all the different things
    ListModel{
        id: contactModel

        ListElement{
            type: "regularBall";
            name: "Normal Ball"
            picSource: ""
            price: 0;
        } ListElement{
            type: "blueBall";
            name: "Blue"
            picSource: ""
            price: 10
        } ListElement{
            type: "greenBall";
            name: "Green"
            picSource: "";
            price: 10
        } ListElement{
            type: "sparkleBall";
            name: "Sparkle"
            picSource: ""
            price: 15
        }ListElement{
            type: "tennisBall";
            name: "Tennis Ball"
            picSource: ""
            price: 15
        }ListElement{
            type: "soccerBall";
            name: "Soccer Ball"
            picSource: ""
            price: 20
        }ListElement{
            type: "bowlingBall";
            name: "Bowling Ball"
            picSource: ""
            price: 20

        }ListElement{
            type: "volleyBall";
            name: "Volley Ball"
            picSource: ""
            price: 25
        }
        ListElement{
            type: "moon";
            name: "The Moon"
            picSource: ""
            price: 32
        }
        ListElement{
            type: "Earth";
            name: "The Earth"
            picSource: ""
            price: 32
        }
    }

    GridView {
        width: 460; height: 345
        cellWidth: 115; cellHeight: 115
        id:grid
        anchors.horizontalCenter: parent.horizontalCenter
        y:root.height-height-40
        Component {
            id: contactsDelegate
            Rectangle{
                width: grid.cellWidth
                height: grid.cellHeight
                color: "transparent"

                Rectangle {
                    width: grid.cellWidth-20
                    height: grid.cellHeight-20
                    id: wrapper
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.verticalCenter: parent.verticalCenter
                    border.width: 3
                    border.color: "black"
                    radius: 5;
                    Column{
                        anchors.fill: parent
                        Image{
                            width: 65
                            height:65;
                            source: picSource
                            anchors.horizontalCenter: parent.horizontalCenter
                        }
                        Text{
                            width: grid.cellWidth-15
                            anchors.horizontalCenter: parent.horizontalCenter
                            id: nameText
                            text: name
                            font.family: "Palatino Linotype"
                            font.bold:  (grid.isCurrentItem===true)?"true":"false"
                            horizontalAlignment: Text.AlignHCenter
                            font.pointSize: 8
                            color:"#050027"
                        }
                    }
                    MouseArea{
                        anchors.fill: parent
                        onClicked:{
                            console.log("Clicked on :" + name)
                            //what happens when u click
                            grid.currentIndex=index;
                            //Larger rectangle is visible
                            //Revtnagle has numerous things, a button to buy (disabled if not enough) and locked sign if not owned and a bal which is spinning
                        }
                    }
                }
            }


        }
        model: contactModel
        delegate: contactsDelegate
        highlight: Rectangle { color: "steelblue"; radius: 5; opacity: 0.5}
        focus: true
    }
}
