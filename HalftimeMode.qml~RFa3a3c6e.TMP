import QtQuick 2.0
import QtQuick.Controls 2.12
import QtQuick.Layouts 1.12
import QtQuick.Controls.Material 2.12
import QtQuick.Controls.Universal 2.12
import Qt.labs.settings 1.0
import QtMultimedia 5.15
import Qt.labs.qmlmodels 1.0
import QtQuick.Dialogs 1.2
import otherArjun 1.0
Page {
    visible: true
    width: 708
    height: 785
    title:"Competitive Mode"
    id: root2
    //    property alias ball: basketball

    property int numberOfClicks: 0;
    MouseArea{
        anchors.fill: parent
        onClicked: {
            ballTriggerTimer.start()
            totalTimeTimer.start()
            remainingTimeBoxText=totalTimeTimer.elapsed
        }
    }
    Connections{
        target: mId
        function onBallClicked(){
            console.log("HEEEERRREEEE")
            numberOfClicks++;
        }
    }
    //for dynamic object creatin
    function createHalftimeBallObjects() {
        var component;
        var sprite;  //comes from qt doc and to lazy to change
        function finishCreation() {
            if (component.status === Component.Ready) {
                sprite = component.createObject(root2);
                if (sprite === null) {
                    // Error Handling
                    console.log("Error creating object");
                }
            } else if (component.status === Component.Error) {
                // Error Handling
                console.log("Error loading component:", component.errorString());
            }
        }
        component = Qt.createComponent("HalftimeBall.qml");
        if (component.status === Component.Ready)
            finishCreation();
        else
            component.statusChanged.connect(finishCreation);
    }
    Rectangle{
        anchors.centerIn: parent
        color: "black"
        z:11
//        Text{
//            id: remainingTimeBoxText
//            anchors.centerIn: parent
//            font.family: "GENISO"
//            font.bold: true
//            text: "20"
//            font.pointSize: 100
//            color: "#595756"
//        }
    }

    Timer{
        id: ballTriggerTimer
        interval: 500
        running: totalTimeTimer.running; repeat: true
        onTriggered:{
            for(let i =0; i < 3; i++){
                console.log("triggered")
                createHalftimeBallObjects()
            }
        }
    }
    MyTimer{
        id: totalTimeTimer
        original:  20000
    }
    Timer{
        id: countdownUpdateTimer
        interval: 1000
        running: totalTimeTimer.running; repeat: true
        onTriggered:{
            remainingTimeBoxText=totalTimeTimer.elapsed
        }
    }
    //Sun
    Rectangle{
        z:8
        visible: true
        id: sun
        radius: 80
        x:80
        y:50
        width:130
        height:130
        color: "yellow"
    }

    //Sky
    Rectangle {
        id: sky
        anchors.top: parent.top
        anchors.bottom: ground.top
        width: parent.width
        color:"blue"
        gradient: Gradient {
            GradientStop { id: skyStartGradient ;position: 0.0; color: "#0080FF" }
            GradientStop { id: skyEndGradient ;position: 1.0; color: "#66CCFF"}
        }
    }

    //Ground
    Rectangle{
        id: ground
        anchors.bottom: parent.bottom
        anchors.left: parent.left
        height: 300
        width: parent.width
        gradient: Gradient {
            GradientStop { id: groundStartGradient; position: 0.0; color: "#00FF00"}
            GradientStop {id: groundEndGradient; position: 1.0; color: "#00803F"}
        }
    }
    Button{
        text: numberOfClicks
    }
}
